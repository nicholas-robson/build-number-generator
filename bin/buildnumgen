#!/usr/bin/env node

const commander = require('commander')
const { generate, validate, format } = require('..')
const { version, description } = require('../package.json')

commander.version(version)
  .description(description)
  .usage('[options] [build_number|product_version]')
  .option('-s, --separator <separator>', 'separates product version from build number')
  .option('-v, --validate', 'only validates a build number')

commander.on('--help', () => {
  console.log(`
  Prints a new build number if called without arguments. If called with a
  previously generated build number, it will print the time, when it was
  generated. If called with a semver number, it will append the build number
  to it and print the result. The default build number separator is dot (.).
  When validating a build number, the process exists with zero if the input
  is valid, otherwise it exists with a non-zero.

  Examples:

    $ buildnumgen
    180625392
    $ buildnumgen 1.0.3
    1.0.3.180625392
    $ buildnumgen 180625392
    Mon Jun 25 2018 13:04
    $ buildnumgen 1.0.3.180625392
    Mon Jun 25 2018 13:04`)
})

commander.parse(process.argv)

const input = commander.args[0]
const valid = validate(input)

if (commander.validate) {
  process.exit(valid ? 0 : 1)
}

let output
if (validate(input)) {
  output = format(input)
} else {
  const options = {
    version: input,
    versionSeparator: commander.separator
  }
  output = generate(options)
}
console.log(output)
